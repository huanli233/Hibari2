kotlin version: 2.1.0
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: D:/Projects/AndroidStudioProjects/Hibari2/shared/core/src/androidMain/kotlin/com/huanli233/hibari2/core/SwitchableViewGroup.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:55)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:42)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:28)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:192)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.runBackend(jvmCompilerPipeline.kt:80)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileModule(jvmCompilerPipelineLightTree.kt:264)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileSingleModuleUsingFrontendIrAndLightTree(jvmCompilerPipelineLightTree.kt:231)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipelineLightTree.kt:86)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:146)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:102)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.kt:316)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:674)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:91)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1659)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:SwitchableViewGroup visibility:public modality:FINAL <T> (modifier:androidx.compose.ui.Modifier?, mode:com.huanli233.hibari2.core.ViewLayoutMode, factory:kotlin.Function1<android.content.Context, T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup>, update:kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup, kotlin.Unit>?, content:kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit>?, $composer:androidx.compose.runtime.Composer?, $changed:kotlin.Int, $default:kotlin.Int) returnType:kotlin.Unit
  annotations:
    Composable
    ComposableInferredTarget(scheme = "[androidx.compose.ui.UiComposable[androidx.compose.ui.UiComposable]]")
  TYPE_PARAMETER name:T index:0 variance: superTypes:[android.view.ViewGroup] reified:false
  VALUE_PARAMETER name:modifier index:0 type:androidx.compose.ui.Modifier? [assignable]
  VALUE_PARAMETER name:mode index:1 type:com.huanli233.hibari2.core.ViewLayoutMode
  VALUE_PARAMETER name:factory index:2 type:kotlin.Function1<android.content.Context, T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup>
  VALUE_PARAMETER name:update index:3 type:kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup, kotlin.Unit>? [assignable]
  VALUE_PARAMETER name:content index:4 type:kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit>? [assignable]
  VALUE_PARAMETER name:$composer index:5 type:androidx.compose.runtime.Composer? [assignable]
  VALUE_PARAMETER name:$changed index:6 type:kotlin.Int
  VALUE_PARAMETER MASK_FOR_DEFAULT_FUNCTION name:$default index:7 type:kotlin.Int
  BLOCK_BODY
    SET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Unit origin=null
      CALL 'public abstract fun startRestartGroup (key: kotlin.Int): androidx.compose.runtime.Composer declared in androidx.compose.runtime.Composer' type=androidx.compose.runtime.Composer origin=null
        $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
        key: CONST Int type=kotlin.Int value=-261606888
    VAR name:$dirty type:kotlin.Int [val]
      GET_VAR '$changed: kotlin.Int declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
    WHEN type=kotlin.Unit origin=IF
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$default: kotlin.Int declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=1
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Unit origin=null
          CALL 'public final fun or (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
            $this: GET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
            other: CONST Int type=kotlin.Int value=6
      BRANCH
        if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
          arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
            $this: GET_VAR '$changed: kotlin.Int declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
            other: CONST Int type=kotlin.Int value=6
          arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Unit origin=null
          CALL 'public final fun or (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
            $this: GET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
            other: WHEN type=kotlin.Int origin=IF
              BRANCH
                if: CALL 'public abstract fun changed (value: kotlin.Any?): kotlin.Boolean declared in androidx.compose.runtime.Composer' type=kotlin.Boolean origin=null
                  $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
                  value: GET_VAR 'modifier: androidx.compose.ui.Modifier? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.ui.Modifier? origin=null
                then: CONST Int type=kotlin.Int value=4
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: CONST Int type=kotlin.Int value=2
    WHEN type=kotlin.Unit origin=IF
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$default: kotlin.Int declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=2
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Unit origin=null
          CALL 'public final fun or (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
            $this: GET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
            other: CONST Int type=kotlin.Int value=48
      BRANCH
        if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
          arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
            $this: GET_VAR '$changed: kotlin.Int declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
            other: CONST Int type=kotlin.Int value=48
          arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Unit origin=null
          CALL 'public final fun or (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
            $this: GET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
            other: WHEN type=kotlin.Int origin=IF
              BRANCH
                if: CALL 'public abstract fun changed (value: kotlin.Any?): kotlin.Boolean declared in androidx.compose.runtime.Composer' type=kotlin.Boolean origin=null
                  $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
                  value: GET_VAR 'mode: com.huanli233.hibari2.core.ViewLayoutMode declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=com.huanli233.hibari2.core.ViewLayoutMode origin=null
                then: CONST Int type=kotlin.Int value=32
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: CONST Int type=kotlin.Int value=16
    WHEN type=kotlin.Unit origin=IF
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$default: kotlin.Int declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=4
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Unit origin=null
          CALL 'public final fun or (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
            $this: GET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
            other: CONST Int type=kotlin.Int value=384
      BRANCH
        if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
          arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
            $this: GET_VAR '$changed: kotlin.Int declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
            other: CONST Int type=kotlin.Int value=384
          arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Unit origin=null
          CALL 'public final fun or (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
            $this: GET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
            other: WHEN type=kotlin.Int origin=IF
              BRANCH
                if: CALL 'public open fun changedInstance (value: kotlin.Any?): kotlin.Boolean declared in androidx.compose.runtime.Composer' type=kotlin.Boolean origin=null
                  $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
                  value: GET_VAR 'factory: kotlin.Function1<android.content.Context, T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup> declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Function1<android.content.Context, T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup> origin=null
                then: CONST Int type=kotlin.Int value=256
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: CONST Int type=kotlin.Int value=128
    WHEN type=kotlin.Unit origin=IF
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$default: kotlin.Int declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=8
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Unit origin=null
          CALL 'public final fun or (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
            $this: GET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
            other: CONST Int type=kotlin.Int value=3072
      BRANCH
        if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
          arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
            $this: GET_VAR '$changed: kotlin.Int declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
            other: CONST Int type=kotlin.Int value=3072
          arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Unit origin=null
          CALL 'public final fun or (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
            $this: GET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
            other: WHEN type=kotlin.Int origin=IF
              BRANCH
                if: CALL 'public open fun changedInstance (value: kotlin.Any?): kotlin.Boolean declared in androidx.compose.runtime.Composer' type=kotlin.Boolean origin=null
                  $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
                  value: GET_VAR 'update: kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup, kotlin.Unit>? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup, kotlin.Unit>? origin=null
                then: CONST Int type=kotlin.Int value=2048
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: CONST Int type=kotlin.Int value=1024
    WHEN type=kotlin.Unit origin=IF
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$default: kotlin.Int declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=16
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Unit origin=null
          CALL 'public final fun or (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
            $this: GET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
            other: CONST Int type=kotlin.Int value=24576
      BRANCH
        if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
          arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
            $this: GET_VAR '$changed: kotlin.Int declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
            other: CONST Int type=kotlin.Int value=24576
          arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Unit origin=null
          CALL 'public final fun or (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
            $this: GET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
            other: WHEN type=kotlin.Int origin=IF
              BRANCH
                if: CALL 'public open fun changedInstance (value: kotlin.Any?): kotlin.Boolean declared in androidx.compose.runtime.Composer' type=kotlin.Boolean origin=null
                  $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
                  value: GET_VAR 'content: kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit>? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit>? origin=null
                then: CONST Int type=kotlin.Int value=16384
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: CONST Int type=kotlin.Int value=8192
    WHEN type=kotlin.Unit origin=IF
      BRANCH
        if: CALL 'public final fun OROR (arg0: kotlin.Boolean, arg1: kotlin.Boolean): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
          arg0: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
            $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
              arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
                $this: GET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
                other: CONST Int type=kotlin.Int value=9363
              arg1: CONST Int type=kotlin.Int value=9362
          arg1: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
            $this: CALL 'public abstract fun <get-skipping> (): kotlin.Boolean declared in androidx.compose.runtime.Composer' type=kotlin.Boolean origin=null
              $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
        then: BLOCK type=kotlin.Unit origin=null
          WHEN type=kotlin.Unit origin=IF
            BRANCH
              if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                  arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
                    $this: GET_VAR '$default: kotlin.Int declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
                    other: CONST Int type=kotlin.Int value=1
                  arg1: CONST Int type=kotlin.Int value=0
              then: SET_VAR 'modifier: androidx.compose.ui.Modifier? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Unit origin=null
                GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
          WHEN type=kotlin.Unit origin=IF
            BRANCH
              if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                  arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
                    $this: GET_VAR '$default: kotlin.Int declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
                    other: CONST Int type=kotlin.Int value=8
                  arg1: CONST Int type=kotlin.Int value=0
              then: SET_VAR 'update: kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup, kotlin.Unit>? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Unit origin=null
                BLOCK type=kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup, kotlin.Unit> origin=null
                  CALL 'public abstract fun startReplaceGroup (key: kotlin.Int): kotlin.Unit declared in androidx.compose.runtime.Composer' type=kotlin.Unit origin=null
                    $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
                    key: CONST Int type=kotlin.Int value=1749180178
                  VAR IR_TEMPORARY_VARIABLE name:tmp0_group type:kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup, kotlin.Unit> [val]
                    CALL 'public final fun cache <T> (invalid: kotlin.Boolean, block: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposerKt.cache>): T of androidx.compose.runtime.ComposerKt.cache [inline] declared in androidx.compose.runtime.ComposerKt' type=kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup, kotlin.Unit> origin=null
                      <T>: kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup, kotlin.Unit>
                      $receiver: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
                      invalid: CONST Boolean type=kotlin.Boolean value=false
                      block: BLOCK type=kotlin.Function0<kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup, kotlin.Unit>> origin=LAMBDA
                        COMPOSITE type=kotlin.Unit origin=null
                        FUNCTION_REFERENCE 'private final fun SwitchableViewGroup$lambda$1 <T> (): kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup$lambda$1, kotlin.Unit> declared in com.huanli233.hibari2.core.SwitchableViewGroupKt' type=kotlin.Function0<kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup, kotlin.Unit>> origin=INLINE_LAMBDA reflectionTarget=null
                          <T>: T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup
                  CALL 'public abstract fun endReplaceGroup (): kotlin.Unit declared in androidx.compose.runtime.Composer' type=kotlin.Unit origin=null
                    $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
                  GET_VAR 'val tmp0_group: kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup, kotlin.Unit> [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup, kotlin.Unit> origin=null
          WHEN type=kotlin.Unit origin=IF
            BRANCH
              if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                  arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
                    $this: GET_VAR '$default: kotlin.Int declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
                    other: CONST Int type=kotlin.Int value=16
                  arg1: CONST Int type=kotlin.Int value=0
              then: SET_VAR 'content: kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit>? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Unit origin=null
                CALL 'internal final fun <get-lambda-1> (): kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit> declared in com.huanli233.hibari2.core.ComposableSingletons$SwitchableViewGroupKt' type=kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit> origin=null
                  $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:INSTANCE type:com.huanli233.hibari2.core.ComposableSingletons$SwitchableViewGroupKt visibility:public [final,static] declared in com.huanli233.hibari2.core.ComposableSingletons$SwitchableViewGroupKt' type=com.huanli233.hibari2.core.ComposableSingletons$SwitchableViewGroupKt origin=null
          WHEN type=kotlin.Unit origin=IF
            BRANCH
              if: CALL 'public final fun isTraceInProgress (): kotlin.Boolean declared in androidx.compose.runtime.ComposerKt' type=kotlin.Boolean origin=null
              then: CALL 'public final fun traceEventStart (key: kotlin.Int, dirty1: kotlin.Int, dirty2: kotlin.Int, info: kotlin.String): kotlin.Unit declared in androidx.compose.runtime.ComposerKt' type=kotlin.Unit origin=null
                key: CONST Int type=kotlin.Int value=-261606888
                dirty1: GET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
                dirty2: CONST Int type=kotlin.Int value=-1
                info: CONST String type=kotlin.String value="com.huanli233.hibari2.core.SwitchableViewGroup (SwitchableViewGroup.kt:27)"
          VAR name:propertyBag type:kotlin.collections.MutableMap<com.huanli233.hibari2.core.PropertyKey<*>, kotlin.Any> [val]
            BLOCK type=kotlin.collections.MutableMap<com.huanli233.hibari2.core.PropertyKey<*>, kotlin.Any> origin=null
              CALL 'public abstract fun startReplaceGroup (key: kotlin.Int): kotlin.Unit declared in androidx.compose.runtime.Composer' type=kotlin.Unit origin=null
                $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
                key: CONST Int type=kotlin.Int value=1749182496
              VAR IR_TEMPORARY_VARIABLE name:tmp1_group type:kotlin.collections.MutableMap<com.huanli233.hibari2.core.PropertyKey<*>, kotlin.Any> [val]
                CALL 'public final fun cache <T> (invalid: kotlin.Boolean, block: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposerKt.cache>): T of androidx.compose.runtime.ComposerKt.cache [inline] declared in androidx.compose.runtime.ComposerKt' type=kotlin.collections.MutableMap<com.huanli233.hibari2.core.PropertyKey<*>, kotlin.Any> origin=null
                  <T>: kotlin.collections.MutableMap<com.huanli233.hibari2.core.PropertyKey<*>, kotlin.Any>
                  $receiver: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
                  invalid: CONST Boolean type=kotlin.Boolean value=false
                  block: BLOCK type=kotlin.Function0<kotlin.collections.MutableMap<com.huanli233.hibari2.core.PropertyKey<*>, kotlin.Any>> origin=LAMBDA
                    COMPOSITE type=kotlin.Unit origin=null
                    FUNCTION_REFERENCE 'private final fun SwitchableViewGroup$lambda$2 (): kotlin.collections.MutableMap<com.huanli233.hibari2.core.PropertyKey<*>, kotlin.Any> declared in com.huanli233.hibari2.core.SwitchableViewGroupKt' type=kotlin.Function0<kotlin.collections.MutableMap<com.huanli233.hibari2.core.PropertyKey<*>, kotlin.Any>> origin=INLINE_LAMBDA reflectionTarget=null
              CALL 'public abstract fun endReplaceGroup (): kotlin.Unit declared in androidx.compose.runtime.Composer' type=kotlin.Unit origin=null
                $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
              GET_VAR 'val tmp1_group: kotlin.collections.MutableMap<com.huanli233.hibari2.core.PropertyKey<*>, kotlin.Any> [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.collections.MutableMap<com.huanli233.hibari2.core.PropertyKey<*>, kotlin.Any> origin=null
          CALL 'public abstract fun clear (): kotlin.Unit declared in kotlin.collections.MutableMap' type=kotlin.Unit origin=null
            $this: GET_VAR 'val propertyBag: kotlin.collections.MutableMap<com.huanli233.hibari2.core.PropertyKey<*>, kotlin.Any> [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.collections.MutableMap<com.huanli233.hibari2.core.PropertyKey<*>, kotlin.Any> origin=null
          VAR name:viewRef type:androidx.compose.runtime.MutableState<com.huanli233.hibari2.core.DrawWrapperLayout?> [val]
            BLOCK type=androidx.compose.runtime.MutableState<com.huanli233.hibari2.core.DrawWrapperLayout?> origin=null
              CALL 'public abstract fun startReplaceGroup (key: kotlin.Int): kotlin.Unit declared in androidx.compose.runtime.Composer' type=kotlin.Unit origin=null
                $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
                key: CONST Int type=kotlin.Int value=1749185445
              VAR IR_TEMPORARY_VARIABLE name:tmp2_group type:androidx.compose.runtime.MutableState<com.huanli233.hibari2.core.DrawWrapperLayout?> [val]
                CALL 'public final fun cache <T> (invalid: kotlin.Boolean, block: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposerKt.cache>): T of androidx.compose.runtime.ComposerKt.cache [inline] declared in androidx.compose.runtime.ComposerKt' type=androidx.compose.runtime.MutableState<com.huanli233.hibari2.core.DrawWrapperLayout?> origin=null
                  <T>: androidx.compose.runtime.MutableState<com.huanli233.hibari2.core.DrawWrapperLayout?>
                  $receiver: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
                  invalid: CONST Boolean type=kotlin.Boolean value=false
                  block: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableState<com.huanli233.hibari2.core.DrawWrapperLayout?>> origin=LAMBDA
                    COMPOSITE type=kotlin.Unit origin=null
                    FUNCTION_REFERENCE 'private final fun SwitchableViewGroup$lambda$3 (): androidx.compose.runtime.MutableState<com.huanli233.hibari2.core.DrawWrapperLayout?> declared in com.huanli233.hibari2.core.SwitchableViewGroupKt' type=kotlin.Function0<androidx.compose.runtime.MutableState<com.huanli233.hibari2.core.DrawWrapperLayout?>> origin=INLINE_LAMBDA reflectionTarget=null
              CALL 'public abstract fun endReplaceGroup (): kotlin.Unit declared in androidx.compose.runtime.Composer' type=kotlin.Unit origin=null
                $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
              GET_VAR 'val tmp2_group: androidx.compose.runtime.MutableState<com.huanli233.hibari2.core.DrawWrapperLayout?> [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.MutableState<com.huanli233.hibari2.core.DrawWrapperLayout?> origin=null
          VAR PROPERTY_DELEGATE name:currentUpdate$delegate type:androidx.compose.runtime.State<kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup, kotlin.Unit>> [val]
            CALL 'public final fun rememberUpdatedState <T> (newValue: T of androidx.compose.runtime.SnapshotStateKt.rememberUpdatedState, $composer: androidx.compose.runtime.Composer?, $changed: kotlin.Int): androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.rememberUpdatedState> declared in androidx.compose.runtime.SnapshotStateKt' type=androidx.compose.runtime.State<kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup, kotlin.Unit>> origin=null
              <T>: kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup, kotlin.Unit>
              newValue: TYPE_OP type=kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup, kotlin.Unit> origin=IMPLICIT_CAST typeOperand=kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup, kotlin.Unit>
                GET_VAR 'update: kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup, kotlin.Unit>? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup, kotlin.Unit>? origin=null
              $composer: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
              $changed: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
                $this: CONST Int type=kotlin.Int value=14
                other: CALL 'public final fun shr (bitCount: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
                  $this: GET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
                  bitCount: CONST Int type=kotlin.Int value=9
          VAR PROPERTY_DELEGATE name:currentContent$delegate type:androidx.compose.runtime.State<kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit>> [val]
            CALL 'public final fun rememberUpdatedState <T> (newValue: T of androidx.compose.runtime.SnapshotStateKt.rememberUpdatedState, $composer: androidx.compose.runtime.Composer?, $changed: kotlin.Int): androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.rememberUpdatedState> declared in androidx.compose.runtime.SnapshotStateKt' type=androidx.compose.runtime.State<kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit>> origin=null
              <T>: kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit>
              newValue: TYPE_OP type=kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit> origin=IMPLICIT_CAST typeOperand=kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit>
                GET_VAR 'content: kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit>? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit>? origin=null
              $composer: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
              $changed: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
                $this: CONST Int type=kotlin.Int value=14
                other: CALL 'public final fun shr (bitCount: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
                  $this: GET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
                  bitCount: CONST Int type=kotlin.Int value=12
          VAR name:finalModifier type:androidx.compose.ui.Modifier [val]
            CALL 'public open fun then (other: androidx.compose.ui.Modifier): androidx.compose.ui.Modifier [infix] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier origin=null
              $this: CALL 'public open fun then (other: androidx.compose.ui.Modifier): androidx.compose.ui.Modifier [infix] declared in androidx.compose.ui.Modifier.Companion' type=androidx.compose.ui.Modifier origin=null
                $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
                other: CONSTRUCTOR_CALL 'public constructor <init> (propertyBag: kotlin.collections.MutableMap<com.huanli233.hibari2.core.PropertyKey<*>, kotlin.Any>) [primary] declared in com.huanli233.hibari2.core.PropertyBagProvider' type=com.huanli233.hibari2.core.PropertyBagProvider origin=null
                  propertyBag: GET_VAR 'val propertyBag: kotlin.collections.MutableMap<com.huanli233.hibari2.core.PropertyKey<*>, kotlin.Any> [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.collections.MutableMap<com.huanli233.hibari2.core.PropertyKey<*>, kotlin.Any> origin=null
              other: TYPE_OP type=androidx.compose.ui.Modifier origin=IMPLICIT_CAST typeOperand=androidx.compose.ui.Modifier
                GET_VAR 'modifier: androidx.compose.ui.Modifier? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.ui.Modifier? origin=null
          CALL 'public final fun Layout (content: @[UiComposable] kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit>, modifier: androidx.compose.ui.Modifier?, measurePolicy: androidx.compose.ui.layout.MeasurePolicy, $composer: androidx.compose.runtime.Composer?, $changed: kotlin.Int, $default: kotlin.Int): kotlin.Unit [inline] declared in androidx.compose.ui.layout.LayoutKt' type=kotlin.Unit origin=null
            content: BLOCK type=kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit> origin=LAMBDA
              COMPOSITE type=kotlin.Unit origin=null
              FUNCTION_REFERENCE 'private final fun SwitchableViewGroup$lambda$12 <T> ($$dirty: kotlin.Int, $$composer: androidx.compose.runtime.Composer?, $propertyBag: kotlin.collections.MutableMap<com.huanli233.hibari2.core.PropertyKey<*>, kotlin.Any>, $currentContent$delegate: androidx.compose.runtime.State<kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit>>, $currentUpdate$delegate: androidx.compose.runtime.State<kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup$lambda$12, kotlin.Unit>>, $factory: kotlin.Function1<android.content.Context, T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup$lambda$12>, $viewRef: androidx.compose.runtime.MutableState<com.huanli233.hibari2.core.DrawWrapperLayout?>, $mode: com.huanli233.hibari2.core.ViewLayoutMode, $composer: androidx.compose.runtime.Composer?, $changed: kotlin.Int): kotlin.Unit declared in com.huanli233.hibari2.core.SwitchableViewGroupKt' type=kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
                <T>: T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup
                $$dirty: GET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
                $$composer: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
                $propertyBag: GET_VAR 'val propertyBag: kotlin.collections.MutableMap<com.huanli233.hibari2.core.PropertyKey<*>, kotlin.Any> [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.collections.MutableMap<com.huanli233.hibari2.core.PropertyKey<*>, kotlin.Any> origin=null
                $currentContent$delegate: GET_VAR 'val currentContent$delegate: androidx.compose.runtime.State<kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit>> [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.State<kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit>> origin=null
                $currentUpdate$delegate: GET_VAR 'val currentUpdate$delegate: androidx.compose.runtime.State<kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup, kotlin.Unit>> [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.State<kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup, kotlin.Unit>> origin=null
                $factory: GET_VAR 'factory: kotlin.Function1<android.content.Context, T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup> declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Function1<android.content.Context, T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup> origin=null
                $viewRef: GET_VAR 'val viewRef: androidx.compose.runtime.MutableState<com.huanli233.hibari2.core.DrawWrapperLayout?> [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.MutableState<com.huanli233.hibari2.core.DrawWrapperLayout?> origin=null
                $mode: GET_VAR 'mode: com.huanli233.hibari2.core.ViewLayoutMode declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=com.huanli233.hibari2.core.ViewLayoutMode origin=null
            modifier: GET_VAR 'val finalModifier: androidx.compose.ui.Modifier [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.ui.Modifier origin=null
            measurePolicy: BLOCK type=androidx.compose.ui.layout.MeasurePolicy origin=null
              CALL 'public abstract fun startReplaceGroup (key: kotlin.Int): kotlin.Unit declared in androidx.compose.runtime.Composer' type=kotlin.Unit origin=null
                $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
                key: CONST Int type=kotlin.Int value=1749242776
              VAR IR_TEMPORARY_VARIABLE name:tmp3_group type:androidx.compose.ui.layout.MeasurePolicy [val]
                CALL 'public final fun cache <T> (invalid: kotlin.Boolean, block: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposerKt.cache>): T of androidx.compose.runtime.ComposerKt.cache [inline] declared in androidx.compose.runtime.ComposerKt' type=androidx.compose.ui.layout.MeasurePolicy origin=null
                  <T>: androidx.compose.ui.layout.MeasurePolicy
                  $receiver: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
                  invalid: CALL 'public final fun or (other: kotlin.Boolean): kotlin.Boolean [infix] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                    $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                      arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
                        $this: GET_VAR 'val $dirty: kotlin.Int [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
                        other: CONST Int type=kotlin.Int value=112
                      arg1: CONST Int type=kotlin.Int value=32
                    other: CALL 'public open fun changedInstance (value: kotlin.Any?): kotlin.Boolean declared in androidx.compose.runtime.Composer' type=kotlin.Boolean origin=null
                      $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
                      value: GET_VAR 'val propertyBag: kotlin.collections.MutableMap<com.huanli233.hibari2.core.PropertyKey<*>, kotlin.Any> [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.collections.MutableMap<com.huanli233.hibari2.core.PropertyKey<*>, kotlin.Any> origin=null
                  block: BLOCK type=kotlin.Function0<androidx.compose.ui.layout.MeasurePolicy> origin=LAMBDA
                    COMPOSITE type=kotlin.Unit origin=null
                    FUNCTION_REFERENCE 'private final fun SwitchableViewGroup$lambda$13 ($viewRef: androidx.compose.runtime.MutableState<com.huanli233.hibari2.core.DrawWrapperLayout?>, $mode: com.huanli233.hibari2.core.ViewLayoutMode, $propertyBag: kotlin.collections.MutableMap<com.huanli233.hibari2.core.PropertyKey<*>, kotlin.Any>): androidx.compose.ui.layout.MeasurePolicy declared in com.huanli233.hibari2.core.SwitchableViewGroupKt' type=kotlin.Function0<androidx.compose.ui.layout.MeasurePolicy> origin=INLINE_LAMBDA reflectionTarget=null
                      $viewRef: GET_VAR 'val viewRef: androidx.compose.runtime.MutableState<com.huanli233.hibari2.core.DrawWrapperLayout?> [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.MutableState<com.huanli233.hibari2.core.DrawWrapperLayout?> origin=null
                      $mode: GET_VAR 'mode: com.huanli233.hibari2.core.ViewLayoutMode declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=com.huanli233.hibari2.core.ViewLayoutMode origin=null
                      $propertyBag: GET_VAR 'val propertyBag: kotlin.collections.MutableMap<com.huanli233.hibari2.core.PropertyKey<*>, kotlin.Any> [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.collections.MutableMap<com.huanli233.hibari2.core.PropertyKey<*>, kotlin.Any> origin=null
              CALL 'public abstract fun endReplaceGroup (): kotlin.Unit declared in androidx.compose.runtime.Composer' type=kotlin.Unit origin=null
                $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
              GET_VAR 'val tmp3_group: androidx.compose.ui.layout.MeasurePolicy [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.ui.layout.MeasurePolicy origin=null
            $composer: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
            $changed: CONST Int type=kotlin.Int value=0
            $default: CONST Int type=kotlin.Int value=0
          WHEN type=kotlin.Unit origin=IF
            BRANCH
              if: CALL 'public final fun isTraceInProgress (): kotlin.Boolean declared in androidx.compose.runtime.ComposerKt' type=kotlin.Boolean origin=null
              then: CALL 'public final fun traceEventEnd (): kotlin.Unit declared in androidx.compose.runtime.ComposerKt' type=kotlin.Unit origin=null
      BRANCH
        if: CONST Boolean type=kotlin.Boolean value=true
        then: CALL 'public abstract fun skipToGroupEnd (): kotlin.Unit declared in androidx.compose.runtime.Composer' type=kotlin.Unit origin=null
          $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
    BLOCK type=kotlin.Unit origin=null
      BLOCK type=kotlin.Unit origin=FOLDED_SAFE_CALL
        WHEN type=kotlin.Unit origin=FOLDED_SAFE_CALL
          BRANCH
            if: COMPOSITE type=kotlin.Boolean origin=null
              VAR IR_TEMPORARY_VARIABLE name:tmp4_safe_receiver type:androidx.compose.runtime.ScopeUpdateScope? [val]
                CALL 'public abstract fun endRestartGroup (): androidx.compose.runtime.ScopeUpdateScope? declared in androidx.compose.runtime.Composer' type=androidx.compose.runtime.ScopeUpdateScope? origin=null
                  $this: GET_VAR '$composer: androidx.compose.runtime.Composer? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.Composer? origin=null
              CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                  arg0: GET_VAR 'val tmp4_safe_receiver: androidx.compose.runtime.ScopeUpdateScope? [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.ScopeUpdateScope? origin=null
                  arg1: CONST Null type=kotlin.Nothing? value=null
            then: CALL 'public abstract fun updateScope (block: kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit>): kotlin.Unit declared in androidx.compose.runtime.ScopeUpdateScope' type=kotlin.Unit origin=null
              $this: GET_VAR 'val tmp4_safe_receiver: androidx.compose.runtime.ScopeUpdateScope? [val] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.runtime.ScopeUpdateScope? origin=null
              block: BLOCK type=kotlin.Function2<androidx.compose.runtime.Composer?, kotlin.Int, kotlin.Unit> origin=LAMBDA
                COMPOSITE type=kotlin.Unit origin=null
                CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=kotlin.Function2<androidx.compose.runtime.Composer?, kotlin.Int, kotlin.Unit> origin=null
                  <T>: kotlin.Function2<androidx.compose.runtime.Composer?, kotlin.Int, kotlin.Unit>
                  dynamicCall: CALL 'public final fun invoke (p0: androidx.compose.ui.Modifier?, p1: com.huanli233.hibari2.core.ViewLayoutMode, p2: kotlin.Function1<android.content.Context, T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup$lambda$14>, p3: kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup$lambda$14, kotlin.Unit>?, p4: kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit>?, p5: kotlin.Int, p6: kotlin.Int): kotlin.Function2<androidx.compose.runtime.Composer?, kotlin.Int, kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=kotlin.Function2<androidx.compose.runtime.Composer?, kotlin.Int, kotlin.Unit> origin=null
                    p0: GET_VAR 'modifier: androidx.compose.ui.Modifier? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=androidx.compose.ui.Modifier? origin=null
                    p1: GET_VAR 'mode: com.huanli233.hibari2.core.ViewLayoutMode declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=com.huanli233.hibari2.core.ViewLayoutMode origin=null
                    p2: GET_VAR 'factory: kotlin.Function1<android.content.Context, T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup> declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Function1<android.content.Context, T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup> origin=null
                    p3: GET_VAR 'update: kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup, kotlin.Unit>? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup, kotlin.Unit>? origin=null
                    p4: GET_VAR 'content: kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit>? [assignable] declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit>? origin=null
                    p5: GET_VAR '$changed: kotlin.Int declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
                    p6: GET_VAR '$default: kotlin.Int declared in com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup' type=kotlin.Int origin=null
                  bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                    tag: CONST Int type=kotlin.Int value=6
                    owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
                    name: CONST String type=kotlin.String value="metafactory"
                    descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
                    isInterface: CONST Boolean type=kotlin.Boolean value=false
                  bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
                    CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                      method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function2, p2: P2 of kotlin.Function2): R of kotlin.Function2 [operator] declared in kotlin.Function2' type=kotlin.Any
                    RAW_FUNCTION_REFERENCE 'private final fun SwitchableViewGroup$lambda$14 <T> ($modifier: androidx.compose.ui.Modifier?, $mode: com.huanli233.hibari2.core.ViewLayoutMode, $factory: kotlin.Function1<android.content.Context, T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup$lambda$14>, $update: kotlin.Function1<T of com.huanli233.hibari2.core.SwitchableViewGroupKt.SwitchableViewGroup$lambda$14, kotlin.Unit>?, $content: kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit>?, $$changed: kotlin.Int, $$default: kotlin.Int, $composer: androidx.compose.runtime.Composer?, $force: kotlin.Int): kotlin.Unit? declared in com.huanli233.hibari2.core.SwitchableViewGroupKt' type=kotlin.Any
                    CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                      method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: androidx.compose.runtime.Composer?, p2: kotlin.Int?): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:41)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:407)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:424)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:52)
	... 45 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun Layout (content: @[UiComposable] kotlin.Function2<androidx.compose.runtime.Composer, kotlin.Int, kotlin.Unit>, modifier: androidx.compose.ui.Modifier?, measurePolicy: androidx.compose.ui.layout.MeasurePolicy, $composer: androidx.compose.runtime.Composer?, $changed: kotlin.Int, $default: kotlin.Int): kotlin.Unit [inline] declared in androidx.compose.ui.layout.LayoutKt' type=kotlin.Unit origin=null
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:163)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:598)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:524)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitContainerExpression(ExpressionCodegen.kt:538)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitContainerExpression(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitor$DefaultImpls.visitBlock(IrElementVisitor.kt:126)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlock(ExpressionCodegen.kt:409)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlock(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrBlock.accept(IrBlock.kt:18)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitWhen(ExpressionCodegen.kt:1050)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitWhen(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrWhen.accept(IrWhen.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:524)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:529)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:236)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:124)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:45)
	... 55 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/ui/layout/LayoutKt;.Layout(Lkotlin/jvm/functions/Function2;Landroidx/compose/ui/Modifier;Landroidx/compose/ui/layout/MeasurePolicy;Landroidx/compose/runtime/Composer;II)V
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 77 more


